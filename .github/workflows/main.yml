name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
          
      - name: Install Server Dependencies
        run: npm ci
        
      - name: Install Client Dependencies
        run: cd client && npm ci
        
      - name: Lint Server
        run: npm run lint || echo "No linting configured"
        
      - name: Test Server
        run: npm test || echo "No server tests configured"
        
      - name: Build Client
        run: cd client && npm run build
        
      - name: Test Client
        run: cd client && npm test -- --watchAll=false || echo "No client tests configured"
        
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: client/build
          
  deploy:
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: client/build
      
      # Zip the application for AWS EB
      - name: Generate deployment package
        run: |
          mkdir -p deployment
          cp -r server.js routes models services utils config middleware client/build package.json package-lock.json .env.example deployment/
          cd deployment && zip -r ../deploy.zip .
      
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # Deploy to Elastic Beanstalk
      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: "ver-${{ github.sha }}"
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy.zip
          wait_for_environment_recovery: 300 